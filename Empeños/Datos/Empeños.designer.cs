#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Empeños.Datos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Empeños")]
	public partial class EmpeñosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertArtículo(Artículo instance);
    partial void UpdateArtículo(Artículo instance);
    partial void DeleteArtículo(Artículo instance);
    partial void InsertVentasDetalle(VentasDetalle instance);
    partial void UpdateVentasDetalle(VentasDetalle instance);
    partial void DeleteVentasDetalle(VentasDetalle instance);
    partial void InsertArtículos_Característica(Artículos_Característica instance);
    partial void UpdateArtículos_Característica(Artículos_Característica instance);
    partial void DeleteArtículos_Característica(Artículos_Característica instance);
    partial void InsertArtículosFoto(ArtículosFoto instance);
    partial void UpdateArtículosFoto(ArtículosFoto instance);
    partial void DeleteArtículosFoto(ArtículosFoto instance);
    partial void InsertCaracterística(Característica instance);
    partial void UpdateCaracterística(Característica instance);
    partial void DeleteCaracterística(Característica instance);
    partial void InsertCategoría(Categoría instance);
    partial void UpdateCategoría(Categoría instance);
    partial void DeleteCategoría(Categoría instance);
    partial void InsertCategorías_Característica(Categorías_Característica instance);
    partial void UpdateCategorías_Característica(Categorías_Característica instance);
    partial void DeleteCategorías_Característica(Categorías_Característica instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertCompra(Compra instance);
    partial void UpdateCompra(Compra instance);
    partial void DeleteCompra(Compra instance);
    partial void InsertComprasDetalle(ComprasDetalle instance);
    partial void UpdateComprasDetalle(ComprasDetalle instance);
    partial void DeleteComprasDetalle(ComprasDetalle instance);
    partial void InsertEmpeño(Empeño instance);
    partial void UpdateEmpeño(Empeño instance);
    partial void DeleteEmpeño(Empeño instance);
    partial void InsertEmpeñosDetalle(EmpeñosDetalle instance);
    partial void UpdateEmpeñosDetalle(EmpeñosDetalle instance);
    partial void DeleteEmpeñosDetalle(EmpeñosDetalle instance);
    partial void InsertEmpeñosGarantía(EmpeñosGarantía instance);
    partial void UpdateEmpeñosGarantía(EmpeñosGarantía instance);
    partial void DeleteEmpeñosGarantía(EmpeñosGarantía instance);
    partial void InsertEmpeñosPago(EmpeñosPago instance);
    partial void UpdateEmpeñosPago(EmpeñosPago instance);
    partial void DeleteEmpeñosPago(EmpeñosPago instance);
    partial void InsertParámetro(Parámetro instance);
    partial void UpdateParámetro(Parámetro instance);
    partial void DeleteParámetro(Parámetro instance);
    partial void InsertVenta(Venta instance);
    partial void UpdateVenta(Venta instance);
    partial void DeleteVenta(Venta instance);
    partial void InsertVentasAbono(VentasAbono instance);
    partial void UpdateVentasAbono(VentasAbono instance);
    partial void DeleteVentasAbono(VentasAbono instance);
    #endregion
		
		public EmpeñosDataContext() : 
				base(global::Empeños.Properties.Settings.Default.EmpeñosConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmpeñosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmpeñosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmpeñosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmpeñosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Artículo> Artículos
		{
			get
			{
				return this.GetTable<Artículo>();
			}
		}
		
		public System.Data.Linq.Table<VentasDetalle> VentasDetalles
		{
			get
			{
				return this.GetTable<VentasDetalle>();
			}
		}
		
		public System.Data.Linq.Table<Artículos_Característica> Artículos_Características
		{
			get
			{
				return this.GetTable<Artículos_Característica>();
			}
		}
		
		public System.Data.Linq.Table<ArtículosFoto> ArtículosFotos
		{
			get
			{
				return this.GetTable<ArtículosFoto>();
			}
		}
		
		public System.Data.Linq.Table<Característica> Características
		{
			get
			{
				return this.GetTable<Característica>();
			}
		}
		
		public System.Data.Linq.Table<Categoría> Categorías
		{
			get
			{
				return this.GetTable<Categoría>();
			}
		}
		
		public System.Data.Linq.Table<Categorías_Característica> Categorías_Características
		{
			get
			{
				return this.GetTable<Categorías_Característica>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Compra> Compras
		{
			get
			{
				return this.GetTable<Compra>();
			}
		}
		
		public System.Data.Linq.Table<ComprasDetalle> ComprasDetalles
		{
			get
			{
				return this.GetTable<ComprasDetalle>();
			}
		}
		
		public System.Data.Linq.Table<Empeño> Empeños
		{
			get
			{
				return this.GetTable<Empeño>();
			}
		}
		
		public System.Data.Linq.Table<EmpeñosDetalle> EmpeñosDetalles
		{
			get
			{
				return this.GetTable<EmpeñosDetalle>();
			}
		}
		
		public System.Data.Linq.Table<EmpeñosGarantía> EmpeñosGarantías
		{
			get
			{
				return this.GetTable<EmpeñosGarantía>();
			}
		}
		
		public System.Data.Linq.Table<EmpeñosPago> EmpeñosPagos
		{
			get
			{
				return this.GetTable<EmpeñosPago>();
			}
		}
		
		public System.Data.Linq.Table<Parámetro> Parámetros
		{
			get
			{
				return this.GetTable<Parámetro>();
			}
		}
		
		public System.Data.Linq.Table<Venta> Ventas
		{
			get
			{
				return this.GetTable<Venta>();
			}
		}
		
		public System.Data.Linq.Table<VentasAbono> VentasAbonos
		{
			get
			{
				return this.GetTable<VentasAbono>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Respaldar")]
		public int Respaldar([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ruta", DbType="VarChar(1000)")] string ruta)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ruta);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artículos")]
	public partial class Artículo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Código;
		
		private string _Nombre;
		
		private System.Nullable<int> _Código_Categoría;
		
		private int _Costo;
		
		private System.Nullable<int> _Precio;
		
		private byte _Estado;
		
		private string _Notas;
		
		private EntitySet<VentasDetalle> _VentasDetalles;
		
		private EntitySet<Artículos_Característica> _Artículos_Características;
		
		private EntitySet<ArtículosFoto> _ArtículosFotos;
		
		private EntitySet<ComprasDetalle> _ComprasDetalles;
		
		private EntitySet<EmpeñosDetalle> _EmpeñosDetalles;
		
		private EntityRef<Categoría> _Categoría;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(string value);
    partial void OnCódigoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCódigo_CategoríaChanging(System.Nullable<int> value);
    partial void OnCódigo_CategoríaChanged();
    partial void OnCostoChanging(int value);
    partial void OnCostoChanged();
    partial void OnPrecioChanging(System.Nullable<int> value);
    partial void OnPrecioChanged();
    partial void OnEstadoChanging(byte value);
    partial void OnEstadoChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    #endregion
		
		public Artículo()
		{
			this._VentasDetalles = new EntitySet<VentasDetalle>(new Action<VentasDetalle>(this.attach_VentasDetalles), new Action<VentasDetalle>(this.detach_VentasDetalles));
			this._Artículos_Características = new EntitySet<Artículos_Característica>(new Action<Artículos_Característica>(this.attach_Artículos_Características), new Action<Artículos_Característica>(this.detach_Artículos_Características));
			this._ArtículosFotos = new EntitySet<ArtículosFoto>(new Action<ArtículosFoto>(this.attach_ArtículosFotos), new Action<ArtículosFoto>(this.detach_ArtículosFotos));
			this._ComprasDetalles = new EntitySet<ComprasDetalle>(new Action<ComprasDetalle>(this.attach_ComprasDetalles), new Action<ComprasDetalle>(this.detach_ComprasDetalles));
			this._EmpeñosDetalles = new EntitySet<EmpeñosDetalle>(new Action<EmpeñosDetalle>(this.attach_EmpeñosDetalles), new Action<EmpeñosDetalle>(this.detach_EmpeñosDetalles));
			this._Categoría = default(EntityRef<Categoría>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Categoría", DbType="Int")]
		public System.Nullable<int> Código_Categoría
		{
			get
			{
				return this._Código_Categoría;
			}
			set
			{
				if ((this._Código_Categoría != value))
				{
					if (this._Categoría.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_CategoríaChanging(value);
					this.SendPropertyChanging();
					this._Código_Categoría = value;
					this.SendPropertyChanged("Código_Categoría");
					this.OnCódigo_CategoríaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Int NOT NULL")]
		public int Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Int")]
		public System.Nullable<int> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="TinyInt NOT NULL")]
		public byte Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_VentasDetalle", Storage="_VentasDetalles", ThisKey="Código", OtherKey="Código_Artículo")]
		public EntitySet<VentasDetalle> VentasDetalles
		{
			get
			{
				return this._VentasDetalles;
			}
			set
			{
				this._VentasDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_Artículos_Característica", Storage="_Artículos_Características", ThisKey="Código", OtherKey="Código_Artículo")]
		public EntitySet<Artículos_Característica> Artículos_Características
		{
			get
			{
				return this._Artículos_Características;
			}
			set
			{
				this._Artículos_Características.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_ArtículosFoto", Storage="_ArtículosFotos", ThisKey="Código", OtherKey="Código_Artículo")]
		public EntitySet<ArtículosFoto> ArtículosFotos
		{
			get
			{
				return this._ArtículosFotos;
			}
			set
			{
				this._ArtículosFotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_ComprasDetalle", Storage="_ComprasDetalles", ThisKey="Código", OtherKey="Código_Artículo")]
		public EntitySet<ComprasDetalle> ComprasDetalles
		{
			get
			{
				return this._ComprasDetalles;
			}
			set
			{
				this._ComprasDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_EmpeñosDetalle", Storage="_EmpeñosDetalles", ThisKey="Código", OtherKey="Código_Artículo")]
		public EntitySet<EmpeñosDetalle> EmpeñosDetalles
		{
			get
			{
				return this._EmpeñosDetalles;
			}
			set
			{
				this._EmpeñosDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoría_Artículo", Storage="_Categoría", ThisKey="Código_Categoría", OtherKey="Código", IsForeignKey=true)]
		public Categoría Categoría
		{
			get
			{
				return this._Categoría.Entity;
			}
			set
			{
				Categoría previousValue = this._Categoría.Entity;
				if (((previousValue != value) 
							|| (this._Categoría.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoría.Entity = null;
						previousValue.Artículos.Remove(this);
					}
					this._Categoría.Entity = value;
					if ((value != null))
					{
						value.Artículos.Add(this);
						this._Código_Categoría = value.Código;
					}
					else
					{
						this._Código_Categoría = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categoría");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VentasDetalles(VentasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = this;
		}
		
		private void detach_VentasDetalles(VentasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = null;
		}
		
		private void attach_Artículos_Características(Artículos_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = this;
		}
		
		private void detach_Artículos_Características(Artículos_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = null;
		}
		
		private void attach_ArtículosFotos(ArtículosFoto entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = this;
		}
		
		private void detach_ArtículosFotos(ArtículosFoto entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = null;
		}
		
		private void attach_ComprasDetalles(ComprasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = this;
		}
		
		private void detach_ComprasDetalles(ComprasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = null;
		}
		
		private void attach_EmpeñosDetalles(EmpeñosDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = this;
		}
		
		private void detach_EmpeñosDetalles(EmpeñosDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Artículo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VentasDetalle")]
	public partial class VentasDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Venta;
		
		private string _Código_Artículo;
		
		private EntityRef<Artículo> _Artículo;
		
		private EntityRef<Venta> _Ventas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_VentaChanging(int value);
    partial void OnCódigo_VentaChanged();
    partial void OnCódigo_ArtículoChanging(string value);
    partial void OnCódigo_ArtículoChanged();
    #endregion
		
		public VentasDetalle()
		{
			this._Artículo = default(EntityRef<Artículo>);
			this._Ventas = default(EntityRef<Venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Venta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Venta
		{
			get
			{
				return this._Código_Venta;
			}
			set
			{
				if ((this._Código_Venta != value))
				{
					if (this._Ventas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_VentaChanging(value);
					this.SendPropertyChanging();
					this._Código_Venta = value;
					this.SendPropertyChanged("Código_Venta");
					this.OnCódigo_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Artículo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código_Artículo
		{
			get
			{
				return this._Código_Artículo;
			}
			set
			{
				if ((this._Código_Artículo != value))
				{
					if (this._Artículo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ArtículoChanging(value);
					this.SendPropertyChanging();
					this._Código_Artículo = value;
					this.SendPropertyChanged("Código_Artículo");
					this.OnCódigo_ArtículoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_VentasDetalle", Storage="_Artículo", ThisKey="Código_Artículo", OtherKey="Código", IsForeignKey=true)]
		public Artículo Artículo
		{
			get
			{
				return this._Artículo.Entity;
			}
			set
			{
				Artículo previousValue = this._Artículo.Entity;
				if (((previousValue != value) 
							|| (this._Artículo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artículo.Entity = null;
						previousValue.VentasDetalles.Remove(this);
					}
					this._Artículo.Entity = value;
					if ((value != null))
					{
						value.VentasDetalles.Add(this);
						this._Código_Artículo = value.Código;
					}
					else
					{
						this._Código_Artículo = default(string);
					}
					this.SendPropertyChanged("Artículo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_VentasDetalle", Storage="_Ventas", ThisKey="Código_Venta", OtherKey="Código", IsForeignKey=true)]
		public Venta Venta
		{
			get
			{
				return this._Ventas.Entity;
			}
			set
			{
				Venta previousValue = this._Ventas.Entity;
				if (((previousValue != value) 
							|| (this._Ventas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ventas.Entity = null;
						previousValue.VentasDetalles.Remove(this);
					}
					this._Ventas.Entity = value;
					if ((value != null))
					{
						value.VentasDetalles.Add(this);
						this._Código_Venta = value.Código;
					}
					else
					{
						this._Código_Venta = default(int);
					}
					this.SendPropertyChanged("Venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artículos_Características")]
	public partial class Artículos_Característica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Código_Artículo;
		
		private int _Código_Característica;
		
		private string _Valor;
		
		private EntityRef<Artículo> _Artículo;
		
		private EntityRef<Característica> _Característica;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_ArtículoChanging(string value);
    partial void OnCódigo_ArtículoChanged();
    partial void OnCódigo_CaracterísticaChanging(int value);
    partial void OnCódigo_CaracterísticaChanged();
    partial void OnValorChanging(string value);
    partial void OnValorChanged();
    #endregion
		
		public Artículos_Característica()
		{
			this._Artículo = default(EntityRef<Artículo>);
			this._Característica = default(EntityRef<Característica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Artículo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código_Artículo
		{
			get
			{
				return this._Código_Artículo;
			}
			set
			{
				if ((this._Código_Artículo != value))
				{
					if (this._Artículo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ArtículoChanging(value);
					this.SendPropertyChanging();
					this._Código_Artículo = value;
					this.SendPropertyChanged("Código_Artículo");
					this.OnCódigo_ArtículoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Característica", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Característica
		{
			get
			{
				return this._Código_Característica;
			}
			set
			{
				if ((this._Código_Característica != value))
				{
					if (this._Característica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_CaracterísticaChanging(value);
					this.SendPropertyChanging();
					this._Código_Característica = value;
					this.SendPropertyChanged("Código_Característica");
					this.OnCódigo_CaracterísticaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="VarChar(500)")]
		public string Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_Artículos_Característica", Storage="_Artículo", ThisKey="Código_Artículo", OtherKey="Código", IsForeignKey=true)]
		public Artículo Artículo
		{
			get
			{
				return this._Artículo.Entity;
			}
			set
			{
				Artículo previousValue = this._Artículo.Entity;
				if (((previousValue != value) 
							|| (this._Artículo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artículo.Entity = null;
						previousValue.Artículos_Características.Remove(this);
					}
					this._Artículo.Entity = value;
					if ((value != null))
					{
						value.Artículos_Características.Add(this);
						this._Código_Artículo = value.Código;
					}
					else
					{
						this._Código_Artículo = default(string);
					}
					this.SendPropertyChanged("Artículo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Característica_Artículos_Característica", Storage="_Característica", ThisKey="Código_Característica", OtherKey="Código", IsForeignKey=true)]
		public Característica Característica
		{
			get
			{
				return this._Característica.Entity;
			}
			set
			{
				Característica previousValue = this._Característica.Entity;
				if (((previousValue != value) 
							|| (this._Característica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Característica.Entity = null;
						previousValue.Artículos_Características.Remove(this);
					}
					this._Característica.Entity = value;
					if ((value != null))
					{
						value.Artículos_Características.Add(this);
						this._Código_Característica = value.Código;
					}
					else
					{
						this._Código_Característica = default(int);
					}
					this.SendPropertyChanged("Característica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArtículosFotos")]
	public partial class ArtículosFoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Código_Artículo;
		
		private int _Código;
		
		private string _Descripción;
		
		private System.Data.Linq.Binary _Foto;
		
		private EntityRef<Artículo> _Artículo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_ArtículoChanging(string value);
    partial void OnCódigo_ArtículoChanged();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    #endregion
		
		public ArtículosFoto()
		{
			this._Artículo = default(EntityRef<Artículo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Artículo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código_Artículo
		{
			get
			{
				return this._Código_Artículo;
			}
			set
			{
				if ((this._Código_Artículo != value))
				{
					if (this._Artículo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ArtículoChanging(value);
					this.SendPropertyChanging();
					this._Código_Artículo = value;
					this.SendPropertyChanged("Código_Artículo");
					this.OnCódigo_ArtículoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_ArtículosFoto", Storage="_Artículo", ThisKey="Código_Artículo", OtherKey="Código", IsForeignKey=true)]
		public Artículo Artículo
		{
			get
			{
				return this._Artículo.Entity;
			}
			set
			{
				Artículo previousValue = this._Artículo.Entity;
				if (((previousValue != value) 
							|| (this._Artículo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artículo.Entity = null;
						previousValue.ArtículosFotos.Remove(this);
					}
					this._Artículo.Entity = value;
					if ((value != null))
					{
						value.ArtículosFotos.Add(this);
						this._Código_Artículo = value.Código;
					}
					else
					{
						this._Código_Artículo = default(string);
					}
					this.SendPropertyChanged("Artículo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Características")]
	public partial class Característica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código;
		
		private string _Nombre;
		
		private char _TipoDeDato;
		
		private EntitySet<Artículos_Característica> _Artículos_Características;
		
		private EntitySet<Categorías_Característica> _Categorías_Características;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTipoDeDatoChanging(char value);
    partial void OnTipoDeDatoChanged();
    #endregion
		
		public Característica()
		{
			this._Artículos_Características = new EntitySet<Artículos_Característica>(new Action<Artículos_Característica>(this.attach_Artículos_Características), new Action<Artículos_Característica>(this.detach_Artículos_Características));
			this._Categorías_Características = new EntitySet<Categorías_Característica>(new Action<Categorías_Característica>(this.attach_Categorías_Características), new Action<Categorías_Característica>(this.detach_Categorías_Características));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoDeDato", DbType="Char(1) NOT NULL")]
		public char TipoDeDato
		{
			get
			{
				return this._TipoDeDato;
			}
			set
			{
				if ((this._TipoDeDato != value))
				{
					this.OnTipoDeDatoChanging(value);
					this.SendPropertyChanging();
					this._TipoDeDato = value;
					this.SendPropertyChanged("TipoDeDato");
					this.OnTipoDeDatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Característica_Artículos_Característica", Storage="_Artículos_Características", ThisKey="Código", OtherKey="Código_Característica")]
		public EntitySet<Artículos_Característica> Artículos_Características
		{
			get
			{
				return this._Artículos_Características;
			}
			set
			{
				this._Artículos_Características.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Característica_Categorías_Característica", Storage="_Categorías_Características", ThisKey="Código", OtherKey="Código_Característica")]
		public EntitySet<Categorías_Característica> Categorías_Características
		{
			get
			{
				return this._Categorías_Características;
			}
			set
			{
				this._Categorías_Características.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artículos_Características(Artículos_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Característica = this;
		}
		
		private void detach_Artículos_Características(Artículos_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Característica = null;
		}
		
		private void attach_Categorías_Características(Categorías_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Característica = this;
		}
		
		private void detach_Categorías_Características(Categorías_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Característica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorías")]
	public partial class Categoría : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código;
		
		private string _Nombre;
		
		private EntitySet<Artículo> _Artículos;
		
		private EntitySet<Categorías_Característica> _Categorías_Características;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Categoría()
		{
			this._Artículos = new EntitySet<Artículo>(new Action<Artículo>(this.attach_Artículos), new Action<Artículo>(this.detach_Artículos));
			this._Categorías_Características = new EntitySet<Categorías_Característica>(new Action<Categorías_Característica>(this.attach_Categorías_Características), new Action<Categorías_Característica>(this.detach_Categorías_Características));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoría_Artículo", Storage="_Artículos", ThisKey="Código", OtherKey="Código_Categoría")]
		public EntitySet<Artículo> Artículos
		{
			get
			{
				return this._Artículos;
			}
			set
			{
				this._Artículos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoría_Categorías_Característica", Storage="_Categorías_Características", ThisKey="Código", OtherKey="Código_Categoría")]
		public EntitySet<Categorías_Característica> Categorías_Características
		{
			get
			{
				return this._Categorías_Características;
			}
			set
			{
				this._Categorías_Características.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artículos(Artículo entity)
		{
			this.SendPropertyChanging();
			entity.Categoría = this;
		}
		
		private void detach_Artículos(Artículo entity)
		{
			this.SendPropertyChanging();
			entity.Categoría = null;
		}
		
		private void attach_Categorías_Características(Categorías_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Categoría = this;
		}
		
		private void detach_Categorías_Características(Categorías_Característica entity)
		{
			this.SendPropertyChanging();
			entity.Categoría = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorías_Características")]
	public partial class Categorías_Característica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Categoría;
		
		private int _Código_Característica;
		
		private EntityRef<Característica> _Característica;
		
		private EntityRef<Categoría> _Categoría;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_CategoríaChanging(int value);
    partial void OnCódigo_CategoríaChanged();
    partial void OnCódigo_CaracterísticaChanging(int value);
    partial void OnCódigo_CaracterísticaChanged();
    #endregion
		
		public Categorías_Característica()
		{
			this._Característica = default(EntityRef<Característica>);
			this._Categoría = default(EntityRef<Categoría>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Categoría", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Categoría
		{
			get
			{
				return this._Código_Categoría;
			}
			set
			{
				if ((this._Código_Categoría != value))
				{
					if (this._Categoría.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_CategoríaChanging(value);
					this.SendPropertyChanging();
					this._Código_Categoría = value;
					this.SendPropertyChanged("Código_Categoría");
					this.OnCódigo_CategoríaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Característica", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Característica
		{
			get
			{
				return this._Código_Característica;
			}
			set
			{
				if ((this._Código_Característica != value))
				{
					if (this._Característica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_CaracterísticaChanging(value);
					this.SendPropertyChanging();
					this._Código_Característica = value;
					this.SendPropertyChanged("Código_Característica");
					this.OnCódigo_CaracterísticaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Característica_Categorías_Característica", Storage="_Característica", ThisKey="Código_Característica", OtherKey="Código", IsForeignKey=true)]
		public Característica Característica
		{
			get
			{
				return this._Característica.Entity;
			}
			set
			{
				Característica previousValue = this._Característica.Entity;
				if (((previousValue != value) 
							|| (this._Característica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Característica.Entity = null;
						previousValue.Categorías_Características.Remove(this);
					}
					this._Característica.Entity = value;
					if ((value != null))
					{
						value.Categorías_Características.Add(this);
						this._Código_Característica = value.Código;
					}
					else
					{
						this._Código_Característica = default(int);
					}
					this.SendPropertyChanged("Característica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoría_Categorías_Característica", Storage="_Categoría", ThisKey="Código_Categoría", OtherKey="Código", IsForeignKey=true)]
		public Categoría Categoría
		{
			get
			{
				return this._Categoría.Entity;
			}
			set
			{
				Categoría previousValue = this._Categoría.Entity;
				if (((previousValue != value) 
							|| (this._Categoría.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoría.Entity = null;
						previousValue.Categorías_Características.Remove(this);
					}
					this._Categoría.Entity = value;
					if ((value != null))
					{
						value.Categorías_Características.Add(this);
						this._Código_Categoría = value.Código;
					}
					else
					{
						this._Código_Categoría = default(int);
					}
					this.SendPropertyChanged("Categoría");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Código;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _NombreCompleto;
		
		private char _Género;
		
		private string _Teléfono;
		
		private string _Email;
		
		private bool _RecibirNotificaciones;
		
		private string _Dirección;
		
		private string _Notas;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Foto;
		
		private short _TipoCedula;
		
		private EntitySet<Compra> _Compras;
		
		private EntitySet<Empeño> _Empeños;
		
		private EntitySet<Venta> _Ventas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(string value);
    partial void OnCódigoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnNombreCompletoChanging(string value);
    partial void OnNombreCompletoChanged();
    partial void OnGéneroChanging(char value);
    partial void OnGéneroChanged();
    partial void OnTeléfonoChanging(string value);
    partial void OnTeléfonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRecibirNotificacionesChanging(bool value);
    partial void OnRecibirNotificacionesChanged();
    partial void OnDirecciónChanging(string value);
    partial void OnDirecciónChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    partial void OnTipoCedulaChanging(short value);
    partial void OnTipoCedulaChanged();
    #endregion
		
		public Cliente()
		{
			this._Compras = new EntitySet<Compra>(new Action<Compra>(this.attach_Compras), new Action<Compra>(this.detach_Compras));
			this._Empeños = new EntitySet<Empeño>(new Action<Empeño>(this.attach_Empeños), new Action<Empeño>(this.detach_Empeños));
			this._Ventas = new EntitySet<Venta>(new Action<Venta>(this.attach_Ventas), new Action<Venta>(this.detach_Ventas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCompleto", AutoSync=AutoSync.Always, DbType="VarChar(201) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NombreCompleto
		{
			get
			{
				return this._NombreCompleto;
			}
			set
			{
				if ((this._NombreCompleto != value))
				{
					this.OnNombreCompletoChanging(value);
					this.SendPropertyChanging();
					this._NombreCompleto = value;
					this.SendPropertyChanged("NombreCompleto");
					this.OnNombreCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Género", DbType="Char(1) NOT NULL")]
		public char Género
		{
			get
			{
				return this._Género;
			}
			set
			{
				if ((this._Género != value))
				{
					this.OnGéneroChanging(value);
					this.SendPropertyChanging();
					this._Género = value;
					this.SendPropertyChanged("Género");
					this.OnGéneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this.OnTeléfonoChanging(value);
					this.SendPropertyChanging();
					this._Teléfono = value;
					this.SendPropertyChanged("Teléfono");
					this.OnTeléfonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecibirNotificaciones", DbType="Bit NOT NULL")]
		public bool RecibirNotificaciones
		{
			get
			{
				return this._RecibirNotificaciones;
			}
			set
			{
				if ((this._RecibirNotificaciones != value))
				{
					this.OnRecibirNotificacionesChanging(value);
					this.SendPropertyChanging();
					this._RecibirNotificaciones = value;
					this.SendPropertyChanged("RecibirNotificaciones");
					this.OnRecibirNotificacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this.OnDirecciónChanging(value);
					this.SendPropertyChanging();
					this._Dirección = value;
					this.SendPropertyChanged("Dirección");
					this.OnDirecciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(500)")]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto.Value;
			}
			set
			{
				if ((this._Foto.Value != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto.Value = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoCedula", DbType="SmallInt NOT NULL")]
		public short TipoCedula
		{
			get
			{
				return this._TipoCedula;
			}
			set
			{
				if ((this._TipoCedula != value))
				{
					this.OnTipoCedulaChanging(value);
					this.SendPropertyChanging();
					this._TipoCedula = value;
					this.SendPropertyChanged("TipoCedula");
					this.OnTipoCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Compra", Storage="_Compras", ThisKey="Código", OtherKey="Código_Cliente")]
		public EntitySet<Compra> Compras
		{
			get
			{
				return this._Compras;
			}
			set
			{
				this._Compras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Empeño", Storage="_Empeños", ThisKey="Código", OtherKey="Código_Cliente")]
		public EntitySet<Empeño> Empeños
		{
			get
			{
				return this._Empeños;
			}
			set
			{
				this._Empeños.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Ventas", ThisKey="Código", OtherKey="Código_Cliente")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Ventas;
			}
			set
			{
				this._Ventas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Compras(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Empeños(Empeño entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Empeños(Empeño entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Ventas(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Ventas(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compras")]
	public partial class Compra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código;
		
		private string _Código_Cliente;
		
		private System.DateTime _Fecha;
		
		private int _CostoTotal;
		
		private byte _Estado;
		
		private string _Notas;
		
		private EntitySet<ComprasDetalle> _ComprasDetalles;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnCódigo_ClienteChanging(string value);
    partial void OnCódigo_ClienteChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnCostoTotalChanging(int value);
    partial void OnCostoTotalChanged();
    partial void OnEstadoChanging(byte value);
    partial void OnEstadoChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    #endregion
		
		public Compra()
		{
			this._ComprasDetalles = new EntitySet<ComprasDetalle>(new Action<ComprasDetalle>(this.attach_ComprasDetalles), new Action<ComprasDetalle>(this.detach_ComprasDetalles));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Cliente", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Código_Cliente
		{
			get
			{
				return this._Código_Cliente;
			}
			set
			{
				if ((this._Código_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Código_Cliente = value;
					this.SendPropertyChanged("Código_Cliente");
					this.OnCódigo_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostoTotal", DbType="Int NOT NULL")]
		public int CostoTotal
		{
			get
			{
				return this._CostoTotal;
			}
			set
			{
				if ((this._CostoTotal != value))
				{
					this.OnCostoTotalChanging(value);
					this.SendPropertyChanging();
					this._CostoTotal = value;
					this.SendPropertyChanged("CostoTotal");
					this.OnCostoTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="TinyInt NOT NULL")]
		public byte Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(300)")]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compra_ComprasDetalle", Storage="_ComprasDetalles", ThisKey="Código", OtherKey="Código_Compra")]
		public EntitySet<ComprasDetalle> ComprasDetalles
		{
			get
			{
				return this._ComprasDetalles;
			}
			set
			{
				this._ComprasDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Compra", Storage="_Cliente", ThisKey="Código_Cliente", OtherKey="Código", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Compras.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Compras.Add(this);
						this._Código_Cliente = value.Código;
					}
					else
					{
						this._Código_Cliente = default(string);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComprasDetalles(ComprasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Compra = this;
		}
		
		private void detach_ComprasDetalles(ComprasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Compra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComprasDetalle")]
	public partial class ComprasDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Compra;
		
		private string _Código_Artículo;
		
		private EntityRef<Artículo> _Artículo;
		
		private EntityRef<Compra> _Compra;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_CompraChanging(int value);
    partial void OnCódigo_CompraChanged();
    partial void OnCódigo_ArtículoChanging(string value);
    partial void OnCódigo_ArtículoChanged();
    #endregion
		
		public ComprasDetalle()
		{
			this._Artículo = default(EntityRef<Artículo>);
			this._Compra = default(EntityRef<Compra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Compra", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Compra
		{
			get
			{
				return this._Código_Compra;
			}
			set
			{
				if ((this._Código_Compra != value))
				{
					if (this._Compra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_CompraChanging(value);
					this.SendPropertyChanging();
					this._Código_Compra = value;
					this.SendPropertyChanged("Código_Compra");
					this.OnCódigo_CompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Artículo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código_Artículo
		{
			get
			{
				return this._Código_Artículo;
			}
			set
			{
				if ((this._Código_Artículo != value))
				{
					if (this._Artículo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ArtículoChanging(value);
					this.SendPropertyChanging();
					this._Código_Artículo = value;
					this.SendPropertyChanged("Código_Artículo");
					this.OnCódigo_ArtículoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_ComprasDetalle", Storage="_Artículo", ThisKey="Código_Artículo", OtherKey="Código", IsForeignKey=true)]
		public Artículo Artículo
		{
			get
			{
				return this._Artículo.Entity;
			}
			set
			{
				Artículo previousValue = this._Artículo.Entity;
				if (((previousValue != value) 
							|| (this._Artículo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artículo.Entity = null;
						previousValue.ComprasDetalles.Remove(this);
					}
					this._Artículo.Entity = value;
					if ((value != null))
					{
						value.ComprasDetalles.Add(this);
						this._Código_Artículo = value.Código;
					}
					else
					{
						this._Código_Artículo = default(string);
					}
					this.SendPropertyChanged("Artículo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compra_ComprasDetalle", Storage="_Compra", ThisKey="Código_Compra", OtherKey="Código", IsForeignKey=true)]
		public Compra Compra
		{
			get
			{
				return this._Compra.Entity;
			}
			set
			{
				Compra previousValue = this._Compra.Entity;
				if (((previousValue != value) 
							|| (this._Compra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Compra.Entity = null;
						previousValue.ComprasDetalles.Remove(this);
					}
					this._Compra.Entity = value;
					if ((value != null))
					{
						value.ComprasDetalles.Add(this);
						this._Código_Compra = value.Código;
					}
					else
					{
						this._Código_Compra = default(int);
					}
					this.SendPropertyChanged("Compra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empeños")]
	public partial class Empeño : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código;
		
		private string _Código_Cliente;
		
		private System.DateTime _Fecha;
		
		private int _TotalMontoPréstamo;
		
		private byte _Estado;
		
		private string _Notas;
		
		private string _Firma;
		
		private EntitySet<EmpeñosDetalle> _EmpeñosDetalles;
		
		private EntitySet<EmpeñosGarantía> _EmpeñosGarantías;
		
		private EntitySet<EmpeñosPago> _EmpeñosPagos;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnCódigo_ClienteChanging(string value);
    partial void OnCódigo_ClienteChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnTotalMontoPréstamoChanging(int value);
    partial void OnTotalMontoPréstamoChanged();
    partial void OnEstadoChanging(byte value);
    partial void OnEstadoChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    partial void OnFirmaChanging(string value);
    partial void OnFirmaChanged();
    #endregion
		
		public Empeño()
		{
			this._EmpeñosDetalles = new EntitySet<EmpeñosDetalle>(new Action<EmpeñosDetalle>(this.attach_EmpeñosDetalles), new Action<EmpeñosDetalle>(this.detach_EmpeñosDetalles));
			this._EmpeñosGarantías = new EntitySet<EmpeñosGarantía>(new Action<EmpeñosGarantía>(this.attach_EmpeñosGarantías), new Action<EmpeñosGarantía>(this.detach_EmpeñosGarantías));
			this._EmpeñosPagos = new EntitySet<EmpeñosPago>(new Action<EmpeñosPago>(this.attach_EmpeñosPagos), new Action<EmpeñosPago>(this.detach_EmpeñosPagos));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Cliente", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Código_Cliente
		{
			get
			{
				return this._Código_Cliente;
			}
			set
			{
				if ((this._Código_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Código_Cliente = value;
					this.SendPropertyChanged("Código_Cliente");
					this.OnCódigo_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMontoPréstamo", DbType="Int NOT NULL")]
		public int TotalMontoPréstamo
		{
			get
			{
				return this._TotalMontoPréstamo;
			}
			set
			{
				if ((this._TotalMontoPréstamo != value))
				{
					this.OnTotalMontoPréstamoChanging(value);
					this.SendPropertyChanging();
					this._TotalMontoPréstamo = value;
					this.SendPropertyChanged("TotalMontoPréstamo");
					this.OnTotalMontoPréstamoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="TinyInt NOT NULL")]
		public byte Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(500)")]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firma", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Firma
		{
			get
			{
				return this._Firma;
			}
			set
			{
				if ((this._Firma != value))
				{
					this.OnFirmaChanging(value);
					this.SendPropertyChanging();
					this._Firma = value;
					this.SendPropertyChanged("Firma");
					this.OnFirmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empeño_EmpeñosDetalle", Storage="_EmpeñosDetalles", ThisKey="Código", OtherKey="Código_Empeño")]
		public EntitySet<EmpeñosDetalle> EmpeñosDetalles
		{
			get
			{
				return this._EmpeñosDetalles;
			}
			set
			{
				this._EmpeñosDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empeño_EmpeñosGarantía", Storage="_EmpeñosGarantías", ThisKey="Código", OtherKey="Código_Empeño")]
		public EntitySet<EmpeñosGarantía> EmpeñosGarantías
		{
			get
			{
				return this._EmpeñosGarantías;
			}
			set
			{
				this._EmpeñosGarantías.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empeño_EmpeñosPago", Storage="_EmpeñosPagos", ThisKey="Código", OtherKey="Código_Empeño")]
		public EntitySet<EmpeñosPago> EmpeñosPagos
		{
			get
			{
				return this._EmpeñosPagos;
			}
			set
			{
				this._EmpeñosPagos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Empeño", Storage="_Cliente", ThisKey="Código_Cliente", OtherKey="Código", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Empeños.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Empeños.Add(this);
						this._Código_Cliente = value.Código;
					}
					else
					{
						this._Código_Cliente = default(string);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmpeñosDetalles(EmpeñosDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Empeño = this;
		}
		
		private void detach_EmpeñosDetalles(EmpeñosDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Empeño = null;
		}
		
		private void attach_EmpeñosGarantías(EmpeñosGarantía entity)
		{
			this.SendPropertyChanging();
			entity.Empeño = this;
		}
		
		private void detach_EmpeñosGarantías(EmpeñosGarantía entity)
		{
			this.SendPropertyChanging();
			entity.Empeño = null;
		}
		
		private void attach_EmpeñosPagos(EmpeñosPago entity)
		{
			this.SendPropertyChanging();
			entity.Empeño = this;
		}
		
		private void detach_EmpeñosPagos(EmpeñosPago entity)
		{
			this.SendPropertyChanging();
			entity.Empeño = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpeñosDetalle")]
	public partial class EmpeñosDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Empeño;
		
		private string _Código_Artículo;
		
		private EntityRef<Artículo> _Artículo;
		
		private EntityRef<Empeño> _Empeño;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_EmpeñoChanging(int value);
    partial void OnCódigo_EmpeñoChanged();
    partial void OnCódigo_ArtículoChanging(string value);
    partial void OnCódigo_ArtículoChanged();
    #endregion
		
		public EmpeñosDetalle()
		{
			this._Artículo = default(EntityRef<Artículo>);
			this._Empeño = default(EntityRef<Empeño>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Empeño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Empeño
		{
			get
			{
				return this._Código_Empeño;
			}
			set
			{
				if ((this._Código_Empeño != value))
				{
					if (this._Empeño.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_EmpeñoChanging(value);
					this.SendPropertyChanging();
					this._Código_Empeño = value;
					this.SendPropertyChanged("Código_Empeño");
					this.OnCódigo_EmpeñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Artículo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Código_Artículo
		{
			get
			{
				return this._Código_Artículo;
			}
			set
			{
				if ((this._Código_Artículo != value))
				{
					if (this._Artículo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ArtículoChanging(value);
					this.SendPropertyChanging();
					this._Código_Artículo = value;
					this.SendPropertyChanged("Código_Artículo");
					this.OnCódigo_ArtículoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artículo_EmpeñosDetalle", Storage="_Artículo", ThisKey="Código_Artículo", OtherKey="Código", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Artículo Artículo
		{
			get
			{
				return this._Artículo.Entity;
			}
			set
			{
				Artículo previousValue = this._Artículo.Entity;
				if (((previousValue != value) 
							|| (this._Artículo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artículo.Entity = null;
						previousValue.EmpeñosDetalles.Remove(this);
					}
					this._Artículo.Entity = value;
					if ((value != null))
					{
						value.EmpeñosDetalles.Add(this);
						this._Código_Artículo = value.Código;
					}
					else
					{
						this._Código_Artículo = default(string);
					}
					this.SendPropertyChanged("Artículo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empeño_EmpeñosDetalle", Storage="_Empeño", ThisKey="Código_Empeño", OtherKey="Código", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Empeño Empeño
		{
			get
			{
				return this._Empeño.Entity;
			}
			set
			{
				Empeño previousValue = this._Empeño.Entity;
				if (((previousValue != value) 
							|| (this._Empeño.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empeño.Entity = null;
						previousValue.EmpeñosDetalles.Remove(this);
					}
					this._Empeño.Entity = value;
					if ((value != null))
					{
						value.EmpeñosDetalles.Add(this);
						this._Código_Empeño = value.Código;
					}
					else
					{
						this._Código_Empeño = default(int);
					}
					this.SendPropertyChanged("Empeño");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpeñosGarantías")]
	public partial class EmpeñosGarantía : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Empeño;
		
		private int _Código;
		
		private byte _Tipo;
		
		private System.Data.Linq.Binary _Documento;
		
		private EntityRef<Empeño> _Empeño;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_EmpeñoChanging(int value);
    partial void OnCódigo_EmpeñoChanged();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnTipoChanging(byte value);
    partial void OnTipoChanged();
    partial void OnDocumentoChanging(System.Data.Linq.Binary value);
    partial void OnDocumentoChanged();
    #endregion
		
		public EmpeñosGarantía()
		{
			this._Empeño = default(EntityRef<Empeño>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Empeño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Empeño
		{
			get
			{
				return this._Código_Empeño;
			}
			set
			{
				if ((this._Código_Empeño != value))
				{
					if (this._Empeño.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_EmpeñoChanging(value);
					this.SendPropertyChanging();
					this._Código_Empeño = value;
					this.SendPropertyChanged("Código_Empeño");
					this.OnCódigo_EmpeñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="TinyInt NOT NULL")]
		public byte Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Documento", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Documento
		{
			get
			{
				return this._Documento;
			}
			set
			{
				if ((this._Documento != value))
				{
					this.OnDocumentoChanging(value);
					this.SendPropertyChanging();
					this._Documento = value;
					this.SendPropertyChanged("Documento");
					this.OnDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empeño_EmpeñosGarantía", Storage="_Empeño", ThisKey="Código_Empeño", OtherKey="Código", IsForeignKey=true)]
		public Empeño Empeño
		{
			get
			{
				return this._Empeño.Entity;
			}
			set
			{
				Empeño previousValue = this._Empeño.Entity;
				if (((previousValue != value) 
							|| (this._Empeño.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empeño.Entity = null;
						previousValue.EmpeñosGarantías.Remove(this);
					}
					this._Empeño.Entity = value;
					if ((value != null))
					{
						value.EmpeñosGarantías.Add(this);
						this._Código_Empeño = value.Código;
					}
					else
					{
						this._Código_Empeño = default(int);
					}
					this.SendPropertyChanged("Empeño");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpeñosPagos")]
	public partial class EmpeñosPago : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Empeño;
		
		private int _Cuota;
		
		private System.DateTime _FechaPago;
		
		private System.DateTime _FechaCuota;
		
		private int _Intereses;
		
		private int _Abono;
		
		private string _Firma;
		
		private EntityRef<Empeño> _Empeño;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_EmpeñoChanging(int value);
    partial void OnCódigo_EmpeñoChanged();
    partial void OnCuotaChanging(int value);
    partial void OnCuotaChanged();
    partial void OnFechaPagoChanging(System.DateTime value);
    partial void OnFechaPagoChanged();
    partial void OnFechaCuotaChanging(System.DateTime value);
    partial void OnFechaCuotaChanged();
    partial void OnInteresesChanging(int value);
    partial void OnInteresesChanged();
    partial void OnAbonoChanging(int value);
    partial void OnAbonoChanged();
    partial void OnFirmaChanging(string value);
    partial void OnFirmaChanged();
    #endregion
		
		public EmpeñosPago()
		{
			this._Empeño = default(EntityRef<Empeño>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Empeño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Empeño
		{
			get
			{
				return this._Código_Empeño;
			}
			set
			{
				if ((this._Código_Empeño != value))
				{
					if (this._Empeño.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_EmpeñoChanging(value);
					this.SendPropertyChanging();
					this._Código_Empeño = value;
					this.SendPropertyChanged("Código_Empeño");
					this.OnCódigo_EmpeñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuota", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cuota
		{
			get
			{
				return this._Cuota;
			}
			set
			{
				if ((this._Cuota != value))
				{
					this.OnCuotaChanging(value);
					this.SendPropertyChanging();
					this._Cuota = value;
					this.SendPropertyChanged("Cuota");
					this.OnCuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPago", DbType="DateTime NOT NULL")]
		public System.DateTime FechaPago
		{
			get
			{
				return this._FechaPago;
			}
			set
			{
				if ((this._FechaPago != value))
				{
					this.OnFechaPagoChanging(value);
					this.SendPropertyChanging();
					this._FechaPago = value;
					this.SendPropertyChanged("FechaPago");
					this.OnFechaPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCuota", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCuota
		{
			get
			{
				return this._FechaCuota;
			}
			set
			{
				if ((this._FechaCuota != value))
				{
					this.OnFechaCuotaChanging(value);
					this.SendPropertyChanging();
					this._FechaCuota = value;
					this.SendPropertyChanged("FechaCuota");
					this.OnFechaCuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intereses", DbType="Int NOT NULL")]
		public int Intereses
		{
			get
			{
				return this._Intereses;
			}
			set
			{
				if ((this._Intereses != value))
				{
					this.OnInteresesChanging(value);
					this.SendPropertyChanging();
					this._Intereses = value;
					this.SendPropertyChanged("Intereses");
					this.OnInteresesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abono", DbType="Int NOT NULL")]
		public int Abono
		{
			get
			{
				return this._Abono;
			}
			set
			{
				if ((this._Abono != value))
				{
					this.OnAbonoChanging(value);
					this.SendPropertyChanging();
					this._Abono = value;
					this.SendPropertyChanged("Abono");
					this.OnAbonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firma", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Firma
		{
			get
			{
				return this._Firma;
			}
			set
			{
				if ((this._Firma != value))
				{
					this.OnFirmaChanging(value);
					this.SendPropertyChanging();
					this._Firma = value;
					this.SendPropertyChanged("Firma");
					this.OnFirmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empeño_EmpeñosPago", Storage="_Empeño", ThisKey="Código_Empeño", OtherKey="Código", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Empeño Empeño
		{
			get
			{
				return this._Empeño.Entity;
			}
			set
			{
				Empeño previousValue = this._Empeño.Entity;
				if (((previousValue != value) 
							|| (this._Empeño.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empeño.Entity = null;
						previousValue.EmpeñosPagos.Remove(this);
					}
					this._Empeño.Entity = value;
					if ((value != null))
					{
						value.EmpeñosPagos.Add(this);
						this._Código_Empeño = value.Código;
					}
					else
					{
						this._Código_Empeño = default(int);
					}
					this.SendPropertyChanged("Empeño");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parámetros")]
	public partial class Parámetro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodoDeCobro;
		
		private int _Plazo;
		
		private decimal _PorcentajeInterés;
		
		private string _RutaRespaldoBD;
		
		private string _RutaServidorReportes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodoDeCobroChanging(int value);
    partial void OnPeriodoDeCobroChanged();
    partial void OnPlazoChanging(int value);
    partial void OnPlazoChanged();
    partial void OnPorcentajeInterésChanging(decimal value);
    partial void OnPorcentajeInterésChanged();
    partial void OnRutaRespaldoBDChanging(string value);
    partial void OnRutaRespaldoBDChanged();
    partial void OnRutaServidorReportesChanging(string value);
    partial void OnRutaServidorReportesChanged();
    #endregion
		
		public Parámetro()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodoDeCobro", DbType="Int NOT NULL")]
		public int PeriodoDeCobro
		{
			get
			{
				return this._PeriodoDeCobro;
			}
			set
			{
				if ((this._PeriodoDeCobro != value))
				{
					this.OnPeriodoDeCobroChanging(value);
					this.SendPropertyChanging();
					this._PeriodoDeCobro = value;
					this.SendPropertyChanged("PeriodoDeCobro");
					this.OnPeriodoDeCobroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plazo", DbType="Int NOT NULL")]
		public int Plazo
		{
			get
			{
				return this._Plazo;
			}
			set
			{
				if ((this._Plazo != value))
				{
					this.OnPlazoChanging(value);
					this.SendPropertyChanging();
					this._Plazo = value;
					this.SendPropertyChanged("Plazo");
					this.OnPlazoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorcentajeInterés", DbType="Money NOT NULL")]
		public decimal PorcentajeInterés
		{
			get
			{
				return this._PorcentajeInterés;
			}
			set
			{
				if ((this._PorcentajeInterés != value))
				{
					this.OnPorcentajeInterésChanging(value);
					this.SendPropertyChanging();
					this._PorcentajeInterés = value;
					this.SendPropertyChanged("PorcentajeInterés");
					this.OnPorcentajeInterésChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RutaRespaldoBD", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string RutaRespaldoBD
		{
			get
			{
				return this._RutaRespaldoBD;
			}
			set
			{
				if ((this._RutaRespaldoBD != value))
				{
					this.OnRutaRespaldoBDChanging(value);
					this.SendPropertyChanging();
					this._RutaRespaldoBD = value;
					this.SendPropertyChanged("RutaRespaldoBD");
					this.OnRutaRespaldoBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RutaServidorReportes", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string RutaServidorReportes
		{
			get
			{
				return this._RutaServidorReportes;
			}
			set
			{
				if ((this._RutaServidorReportes != value))
				{
					this.OnRutaServidorReportesChanging(value);
					this.SendPropertyChanging();
					this._RutaServidorReportes = value;
					this.SendPropertyChanged("RutaServidorReportes");
					this.OnRutaServidorReportesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ventas")]
	public partial class Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código;
		
		private string _Código_Cliente;
		
		private System.DateTime _Fecha;
		
		private byte _Estado;
		
		private string _Notas;
		
		private EntitySet<VentasDetalle> _VentasDetalles;
		
		private EntitySet<VentasAbono> _VentasAbonos;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigoChanging(int value);
    partial void OnCódigoChanged();
    partial void OnCódigo_ClienteChanging(string value);
    partial void OnCódigo_ClienteChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnEstadoChanging(byte value);
    partial void OnEstadoChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    #endregion
		
		public Venta()
		{
			this._VentasDetalles = new EntitySet<VentasDetalle>(new Action<VentasDetalle>(this.attach_VentasDetalles), new Action<VentasDetalle>(this.detach_VentasDetalles));
			this._VentasAbonos = new EntitySet<VentasAbono>(new Action<VentasAbono>(this.attach_VentasAbonos), new Action<VentasAbono>(this.detach_VentasAbonos));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código
		{
			get
			{
				return this._Código;
			}
			set
			{
				if ((this._Código != value))
				{
					this.OnCódigoChanging(value);
					this.SendPropertyChanging();
					this._Código = value;
					this.SendPropertyChanged("Código");
					this.OnCódigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Cliente", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Código_Cliente
		{
			get
			{
				return this._Código_Cliente;
			}
			set
			{
				if ((this._Código_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Código_Cliente = value;
					this.SendPropertyChanged("Código_Cliente");
					this.OnCódigo_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="TinyInt NOT NULL")]
		public byte Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(300)")]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_VentasDetalle", Storage="_VentasDetalles", ThisKey="Código", OtherKey="Código_Venta")]
		public EntitySet<VentasDetalle> VentasDetalles
		{
			get
			{
				return this._VentasDetalles;
			}
			set
			{
				this._VentasDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_VentasAbono", Storage="_VentasAbonos", ThisKey="Código", OtherKey="Código_Venta")]
		public EntitySet<VentasAbono> VentasAbonos
		{
			get
			{
				return this._VentasAbonos;
			}
			set
			{
				this._VentasAbonos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Cliente", ThisKey="Código_Cliente", OtherKey="Código", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._Código_Cliente = value.Código;
					}
					else
					{
						this._Código_Cliente = default(string);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VentasDetalles(VentasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Venta = this;
		}
		
		private void detach_VentasDetalles(VentasDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Venta = null;
		}
		
		private void attach_VentasAbonos(VentasAbono entity)
		{
			this.SendPropertyChanging();
			entity.Venta = this;
		}
		
		private void detach_VentasAbonos(VentasAbono entity)
		{
			this.SendPropertyChanging();
			entity.Venta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VentasAbonos")]
	public partial class VentasAbono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Código_Venta;
		
		private int _Cuota;
		
		private System.DateTime _Fecha;
		
		private decimal _Monto;
		
		private EntityRef<Venta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCódigo_VentaChanging(int value);
    partial void OnCódigo_VentaChanged();
    partial void OnCuotaChanging(int value);
    partial void OnCuotaChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnMontoChanging(decimal value);
    partial void OnMontoChanged();
    #endregion
		
		public VentasAbono()
		{
			this._Venta = default(EntityRef<Venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Código_Venta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Código_Venta
		{
			get
			{
				return this._Código_Venta;
			}
			set
			{
				if ((this._Código_Venta != value))
				{
					if (this._Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCódigo_VentaChanging(value);
					this.SendPropertyChanging();
					this._Código_Venta = value;
					this.SendPropertyChanged("Código_Venta");
					this.OnCódigo_VentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuota", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cuota
		{
			get
			{
				return this._Cuota;
			}
			set
			{
				if ((this._Cuota != value))
				{
					this.OnCuotaChanging(value);
					this.SendPropertyChanging();
					this._Cuota = value;
					this.SendPropertyChanged("Cuota");
					this.OnCuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monto", DbType="Money NOT NULL")]
		public decimal Monto
		{
			get
			{
				return this._Monto;
			}
			set
			{
				if ((this._Monto != value))
				{
					this.OnMontoChanging(value);
					this.SendPropertyChanging();
					this._Monto = value;
					this.SendPropertyChanged("Monto");
					this.OnMontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_VentasAbono", Storage="_Venta", ThisKey="Código_Venta", OtherKey="Código", IsForeignKey=true)]
		public Venta Venta
		{
			get
			{
				return this._Venta.Entity;
			}
			set
			{
				Venta previousValue = this._Venta.Entity;
				if (((previousValue != value) 
							|| (this._Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venta.Entity = null;
						previousValue.VentasAbonos.Remove(this);
					}
					this._Venta.Entity = value;
					if ((value != null))
					{
						value.VentasAbonos.Add(this);
						this._Código_Venta = value.Código;
					}
					else
					{
						this._Código_Venta = default(int);
					}
					this.SendPropertyChanged("Venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
